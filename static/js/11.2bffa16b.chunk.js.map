{"version":3,"file":"static/js/11.2bffa16b.chunk.js","mappings":"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","sources":["Careers.js","Footer.js","ContactModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Navbar, Nav, NavDropdown, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport ContactModal from './ContactModal';\nimport logo from './logo1.png';\nimport './Welcome.css';\n\nexport default function Careers() {\n  const [showContact, setShowContact] = useState(false);\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"py-2\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\">\n            <img src={logo} alt=\"Vikas Engineering\" width={36} height={36} className=\"d-inline-block align-top\" />{' '}\n            Vikas Engineering\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-nav\" />\n          <Navbar.Collapse id=\"navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavDropdown title=\"Services\" id=\"nav-dropdown-services\">\n                <NavDropdown.Item as={Link} to=\"/construction-material-supplies\">Pipes and Fittings catalog</NavDropdown.Item>\n                <NavDropdown.Item as={Link} to=\"/engineering-services\">Engineering Services</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item as={Link} to=\"/legal\">Legal</NavDropdown.Item>\n              </NavDropdown>\n              <NavDropdown title=\"Projects\" id=\"nav-dropdown-projects\">\n                <NavDropdown.Item as={Link} to=\"/projects\">Project Artifacts</NavDropdown.Item>\n                <NavDropdown.Item as={Link} to=\"/projects\">Photo Gallery</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item as={Link} to=\"/legal\">Legal</NavDropdown.Item>\n              </NavDropdown>\n              <NavDropdown title=\"More\" id=\"nav-dropdown-more\">\n                <NavDropdown.Item as={Link} to=\"/about\">About us</NavDropdown.Item>\n                <NavDropdown.Item as={Link} to=\"/careers\">Careers</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item as={Link} to=\"/legal\">Legal</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Button variant=\"warning\" className=\"ms-1\" onClick={() => setShowContact(true)}>Contact</Button>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <ContactModal show={showContact} onHide={() => setShowContact(false)} initialMessage={\"I'm interested in career opportunities.\"} />\n\n      <header className=\"about-hero py-5\" style={{ position: 'relative', color: '#fff' }}>\n        <div style={{ position: 'absolute', inset: 0, background: 'rgba(11,61,145,0.55)' }} />\n        <Container style={{ position: 'relative', zIndex: 1 }}>\n          <Row className=\"justify-content-center text-center py-5\">\n            <Col md={8}>\n              <h1 className=\"display-5 fw-bold\">Careers</h1>\n              <p className=\"lead\">We don't have any new positions open right now. Please check back later or contact us.</p>\n              <Button variant=\"warning\" onClick={() => setShowContact(true)}>Contact</Button>\n            </Col>\n          </Row>\n        </Container>\n      </header>\n\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ContactModal from './ContactModal';\n\nexport default function Footer() {\n  const [showContact, setShowContact] = useState(false);\n  return (\n    <footer className=\"site-footer bg-dark text-light pt-5\">\n      <Container>\n        <Row className=\"gy-4\">\n          <Col md={4}>\n            <h5 className=\"text-uppercase fw-bold\">About Vikas Engineering</h5>\n            <p className=\"small text-light\">We Provide High-quality piping materials, fittings and engineering services for industrial and municipal projects.</p>\n          </Col>\n          <Col md={2}>\n            <h6 className=\"fw-bold\">Quick Links</h6>\n            <ul className=\"list-unstyled small\">\n              <li><Link to=\"/construction-material-supplies\" className=\"text-light\">Products</Link></li>\n              <li><Link to=\"/projects\" className=\"text-light\">Projects</Link></li>\n              <li><Link to=\"/about\" className=\"text-light\">About</Link></li>\n              <li><button type=\"button\" className=\"btn btn-link p-0 text-light align-baseline\" onClick={() => setShowContact(true)}>Contact</button></li>\n            </ul>\n          </Col>\n          <Col md={3}>\n            <h6 className=\"fw-bold\">Products</h6>\n            <ul className=\"list-unstyled small\">\n              <li><Link to=\"/construction-material-supplies#pipes\" className=\"text-light\">Pipes & Fittings</Link></li>\n              <li><Link to=\"/construction-material-supplies#couplings\" className=\"text-light\">Couplings</Link></li>\n              <li><Link to=\"/construction-material-supplies#valves\" className=\"text-light\">Valves</Link></li>\n              <li><Link to=\"/construction-material-supplies#flanges\" className=\"text-light\">Flanges</Link></li>\n            </ul>\n          </Col>\n          <Col md={3}>\n            <h6 className=\"fw-bold\">Contact</h6>\n            <address className=\"small text-light\">\n              Vikas pipe and Fittings<br />\n              1601 Ohio Dr SW<br />\n              Washington DC, 20004<br />\n            </address>\n            <p className=\"mb-1 small\">Phone: <a className=\"text-light\" href=\"tel:+12028678692\">202-867-8692</a></p>\n            <p className=\"small\">Email: <a className=\"text-light\" href=\"mailto:sales@vikaspipeandfittings.com\">sales@vikaspipeandfittings.com</a></p>\n          </Col>\n        </Row>\n      </Container>\n      <div className=\"footer-bottom bg-black text-center text-muted py-2 mt-4\">\n        <Container>\n          <small>© {new Date().getFullYear()} Vikas Engineering LLC — All rights reserved.</small>\n        </Container>\n      </div>\n      <ContactModal show={showContact} onHide={() => setShowContact(false)} initialMessage={\"I'm interested in learning more about your products and pricing.\"} />\n    </footer>\n  );\n}\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default function ContactModal({ show, onHide, initialMessage }) {\n  const [submitting, setSubmitting] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [errors, setErrors] = useState(null);\n\n  // Captcha challenge state\n  const [showChallenge, setShowChallenge] = useState(false);\n  const [challenge, setChallenge] = useState('');\n  const [challengeInput, setChallengeInput] = useState('');\n  const [challengeError, setChallengeError] = useState(null);\n\n  const SUBMIT_URL = 'https://formspree.io/f/xzzjzjky';\n\n  const randomWord = (len = 5) => {\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    let s = '';\n    for (let i = 0; i < len; i++) s += letters[Math.floor(Math.random() * letters.length)];\n    return s;\n  };\n\n  const submitFormData = async (formData) => {\n    try {\n      let res = await fetch(SUBMIT_URL, {\n        method: 'POST',\n        body: formData,\n        headers: { Accept: 'application/json' }\n      });\n\n      // fallback retry as urlencoded if Formspree responds 403\n      if (res.status === 403) {\n        try {\n          const urlParams = new URLSearchParams();\n          for (const [key, value] of formData.entries()) urlParams.append(key, value);\n          res = await fetch(SUBMIT_URL, {\n            method: 'POST',\n            body: urlParams,\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            }\n          });\n        } catch (innerErr) {\n          // eslint-disable-next-line no-console\n          console.error('URL-encoded retry failed', innerErr);\n        }\n      }\n\n      let data = null;\n      try {\n        data = await res.json();\n      } catch (jsonErr) {\n        try {\n          const txt = await res.text();\n          data = { _raw: txt };\n        } catch (txtErr) {\n          data = null;\n        }\n      }\n\n      if (res.ok) {\n        setSucceeded(true);\n        return { ok: true };\n      }\n\n      const serverMessage = data && (data.errors ? data.errors.map(e => e.message).join('; ') : data._raw || JSON.stringify(data));\n      setErrors([{ message: `Submission failed (status ${res.status})${serverMessage ? ': ' + serverMessage : ''}` }]);\n      // eslint-disable-next-line no-console\n      console.error('Form submission failed', { status: res.status, body: data });\n      return { ok: false };\n    } catch (err) {\n      setErrors([{ message: err.message || 'Network error' }]);\n      return { ok: false };\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors(null);\n    setChallengeError(null);\n    setSubmitting(true);\n\n    // Honeypot (if present)\n    if (e.target.website && e.target.website.value) {\n      setErrors([{ message: 'Bot detected' }]);\n      setSubmitting(false);\n      return;\n    }\n\n    // Validate builtin HTML constraints (email, required phone, etc.) before proceeding\n    // reportValidity() shows native validation UI; checkValidity() returns boolean.\n    if (typeof e.target.checkValidity === 'function' && !e.target.checkValidity()) {\n      // show native validation hints\n      if (typeof e.target.reportValidity === 'function') e.target.reportValidity();\n      setSubmitting(false);\n      return;\n    }\n\n    // If challenge not yet shown, generate and show it\n    if (!showChallenge) {\n      setChallenge(randomWord(5));\n      setShowChallenge(true);\n      setSubmitting(false);\n      return;\n    }\n\n    // If challenge shown, verify input\n    if (challengeInput.trim().toLowerCase() !== challenge.toLowerCase()) {\n      setChallengeError('Captcha does not match. Please try again.');\n      setSubmitting(false);\n      return;\n    }\n\n    // Build form data and remove captcha_input before sending\n    const formData = new FormData(e.target);\n    if (formData.has('captcha_input')) formData.delete('captcha_input');\n\n    const result = await submitFormData(formData);\n    setSubmitting(false);\n    if (result.ok) {\n      // clear challenge UI\n      setShowChallenge(false);\n      setChallenge('');\n      setChallengeInput('');\n    }\n  };\n\n  const regenerateChallenge = () => {\n    setChallenge(randomWord(5));\n    setChallengeInput('');\n    setChallengeError(null);\n  };\n\n  const cancelChallenge = () => {\n    setShowChallenge(false);\n    setChallenge('');\n    setChallengeInput('');\n    setChallengeError(null);\n  };\n\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Contact Us</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {succeeded ? (\n          <div>\n            <p>Thanks — we'll be in touch shortly.</p>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"contactName\" className=\"form-label\">Name</label>\n              <input id=\"contactName\" name=\"name\" className=\"form-control\" type=\"text\" />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"contactEmail\" className=\"form-label\">Email</label>\n              <input id=\"contactEmail\" name=\"email\" className=\"form-control\" type=\"email\" required />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"contactPhone\" className=\"form-label\">Phone</label>\n              <input\n                id=\"contactPhone\"\n                name=\"phone\"\n                className=\"form-control\"\n                type=\"tel\"\n                placeholder=\"e.g. +1 555-555-5555\"\n                required\n                pattern=\"^[+0-9()\\-\\s]{6,30}$\"\n                title=\"Please enter a valid phone number (digits, spaces, +, -, parentheses).\"\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"contactMessage\" className=\"form-label\">Message</label>\n              <textarea id=\"contactMessage\" name=\"message\" className=\"form-control\" rows={3} defaultValue={initialMessage || ''} required />\n            </div>\n\n            {showChallenge && (\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Type the word shown below to verify</label>\n                <div style={{ padding: '8px', background: '#f5f5f5', fontFamily: 'monospace', fontSize: '20px', letterSpacing: '4px', textAlign: 'center' }}>{challenge}</div>\n                <input\n                  name=\"captcha_input\"\n                  value={challengeInput}\n                  onChange={(ev) => setChallengeInput(ev.target.value)}\n                  className=\"form-control mt-2\"\n                  placeholder=\"Type the word exactly\"\n                  required\n                />\n                {challengeError && <div className=\"text-danger mt-1\">{challengeError}</div>}\n                <div className=\"mt-2 d-flex gap-2\">\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={regenerateChallenge}>Regenerate</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={cancelChallenge}>Cancel</Button>\n                </div>\n              </div>\n            )}\n\n            {errors && (\n              <div className=\"alert alert-danger\">\n                {errors.map((err, i) => <div key={i}>{err.message}</div>)}\n              </div>\n            )}\n\n            <div className=\"d-flex justify-content-end\">\n              <Button variant=\"secondary\" onClick={onHide} className=\"me-2\" disabled={submitting}>Close</Button>\n              <Button variant=\"primary\" type=\"submit\" disabled={submitting}>{submitting ? 'Sending...' : (showChallenge ? 'Verify & Send' : 'Send')}</Button>\n            </div>\n          </form>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n}\n"],"names":["Careers","showContact","setShowContact","useState","_jsxs","children","_jsx","Navbar","bg","variant","expand","className","sticky","Container","Brand","as","Link","to","src","logo","alt","width","height","Toggle","Collapse","id","Nav","NavDropdown","title","Item","Divider","Button","onClick","ContactModal","show","onHide","initialMessage","style","position","color","inset","background","zIndex","Row","Col","md","Footer","type","href","Date","getFullYear","_ref","submitting","setSubmitting","succeeded","setSucceeded","errors","setErrors","showChallenge","setShowChallenge","challenge","setChallenge","challengeInput","setChallengeInput","challengeError","setChallengeError","SUBMIT_URL","randomWord","len","arguments","length","undefined","letters","s","i","Math","floor","random","Modal","centered","Header","closeButton","Title","Body","onSubmit","async","e","preventDefault","target","website","value","message","checkValidity","reportValidity","trim","toLowerCase","formData","FormData","has","delete","result","res","fetch","method","body","headers","Accept","status","urlParams","URLSearchParams","key","entries","append","innerErr","console","error","data","json","jsonErr","_raw","text","txtErr","ok","serverMessage","map","join","JSON","stringify","concat","err","submitFormData","htmlFor","name","required","placeholder","pattern","rows","defaultValue","padding","fontFamily","fontSize","letterSpacing","textAlign","onChange","ev","size","regenerateChallenge","cancelChallenge","disabled"],"sourceRoot":""}